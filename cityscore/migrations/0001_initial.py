# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-06-26 15:59
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    # dependencies = [
    #     ('auth', '0007_alter_validators_add_error_messages'),
    # ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('cityname', models.CharField(max_length=200, verbose_name=b'City name')),
                # ('input_spec', models.CharField(choices=[(b'1', b'Manual'), (b'2', b'Server Upload'), (b'3', b'SQL Database')], max_length=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        # migrations.CreateModel(
        #     name='Metric',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('name', models.CharField(max_length=200, verbose_name=b'Metric name')),
        #         ('definition', models.CharField(verbose_name=b'Definition of metric')),
        #         ('direction', models.BooleanField(default=1, verbose_name=b'Do you want this value to go up or down?')),
        #         ('historic', models.BooleanField(default=0, verbose_name=b'Is the target value based on history, or is there a manual input?')),
        #         ('target', models.FloatField(verbose_name=b'What is the target value?')),
        #         ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cityscore.City', verbose_name=b'The account to which this information belongs')),
        #     ],
        # ),
        # migrations.CreateModel(
        #     name='Value',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('val', models.FloatField(verbose_name=b'Input variable value.')),
        #         ('entry_date', models.DateField(default=datetime.date.today, verbose_name=b'Date when variable value was input.')),
        #         ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cityscore.City')),
        #         ('metric', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cityscore.Metric', verbose_name=b'Measured metric corresponding to value')),
        #     ],
        # ),
    ]
